(posix, sparc, x86, x86-64)

4 Водопадный стиль программирования.
5 Пример применения.
6 Профелирование.
7 

В ходе комплексного тестирования программных средств возникает необходимость интерпретации результатов множества тестов, написанных по различным правилам и для различных целей. Для решения задачи автоматизации запуска, сбора информации и интерпретации результатов тестирования необходимо привести интерфейсную часть всех тестирующих программ к единообразному виду позволяющему с наименьшими затратами решать поставленную задачу. Для наиболее простого решения, исключающего возможность административного взаимонепонимания при реализации интерфейсов для обработки входных параметров и систематизации выходных данных, предлагается использовать единую библиотеку с небольшим  прикладным программным интерфейсом — API. При этом, в силу того что приложения тестирования обеспечивают взаимодействие с оборудованием, необходимо обеспечить полную поддержку многопоточности в такой библиотеке.

Согласно с исходными данными библиотека должна быть совместима со стандартом POSIX и использоваться на машинах архитектур SPARC V8, SPARC V9, i386, x86-64. 

POSIX (англ. Portable Operating System Interface for Unix — Переносимый интерфейс операционных систем Unix) — набор стандартов, описывающих интерфейсы между операционной системой и прикладной программой. Стандарт создан для обеспечения совместимости различных UNIX-подобных операционных систем и переносимости прикладных программ на уровне исходного кода. Серия стандартов POSIX была разработана комитетом 1003 IEEE. 
Разрабатываемая библиотека должна быть спроектирована согласно стандарту POSIX, а иммено:
Параллельное выполнение — функция, которая приостановила выполнение текущего потока не должна быть причиной для приостановки выполнения других потоков на неопределенное время.
Машинный и сетевой порядок байтов — когда данные передаются перез сеть, они передаются как последовательность 8-битных беззнаковых значений (октетов). Если объект (адресс или номер порта ) может быть больше чем 8 бит, он должен быть сохранен в нескольких октетах, причем первая октета имеет меньший адрес, чем вторая окта.
Сетевой порядок байтов может быть не удобным для получения фактических значений. Для этого более разумно сохранять значения как обычные целые. Такой порядок называется машинным порядком байтов.
Для 8-битный значений, хранящихся в uint8_t обьектах, не требуется преобразование в или из машинного порядка байтов. 16 и 32-битные значения могут быть преобразованы с помощью функций htonl(), htons(), ntohl(), and ntohs(). Данные для конвертации в машинный порядок байтов должны быть пролучены либо непосредственно из uint16_t или uint32_t объектов, либо должны быть скопированны из массива байтов с использованием memcpy() или похожих функций.
Семафор — синхронизационный примитив, обеспечивающий как базовый, так и сложные синхронизационные механизмы, определенные приложением. 
	Операция закрытия семафора
Если значение семафора равно нулю, операция закрытия влечет за собой блокировку потока  и добавляет его к другим потокам находящимся в режиме ожидания. В другом случает значение должно быть уменьшено.
	Операция открытия семафора
Если существуют потоки, находящиеся в ожидании, и один из выполняющихся потоков закончил выполнение, то семафор будет разблокирован. Если нет потоков находящихся в режиме ожидания, то значение семафора инкрементируется.
Обработка не числовых (NaN) аргументов математических функций
Функции, вызываемые с NaN аргументами, возвращают NaN, если не предусмотрено другого. Если функция с одним или более NaN возвращает NaN результат, результат должен быть таким же как и один из NaN аргументов (после возможной конвертации), за исключением знака.

Архитектура SPARC это - набор инструкций для центрального процессора, разработанная   для линейки  RISC компьютеров (reduced instruction set computer — компьютер с упрощенным набором инструкций). Разработана в 1986 году компанией Sun Microsystems под нименованием SPARC V7. Спецификация SPARC V8 была опубликована 1990 году. В 1993 году была опубликована спецификация SPARC V9.  Она сочетает в себе простоту набора команд и высокую скорость исполнения кода. Данная архитектура позволяет, используя спектр микросхем и системных реализаций,  варьировать между отношением цены и качества в ряде различных приложений, таких как: научно-инженерных, приложений с режимом реального времени, и коммерческих. 
Основное отличие SPARC V9 от SPARC V8 является поддержка 64-битной адресации.
ЭВМ, на которых будет использоваться разрабатываемая библиотека, имеют  процессоры архитектуры SPARC V8 (МЦСТ R500 и МЦСТ R500S). Так же планируется переход на процессоры архитектуры SPARC V9 (МЦСТ R1000).
Микропроцессор МЦСТ R500 — малогабаритный и экономичный микропроцессор. Рабочая частота 500 Мгц, имеет один конвеер команд и запускается на исполнение до 1 команды в такт. Кэш-память 1-ого уровня интегрирована на кристалле, кэш-память 2-ого   уровня — внешняя, до 4 Мбайт.
Микропроцессор МЦСТ R500S является двухядерной системой на кристалле типа  «все-в-одном». В микросхему интегрированы: 2 процессорных ядра архитектуры SPARC V8 (аналогичные МЦСТ-R500), общая кэш-память второго уровня объемом 512 КБ.
Микропроцессор МЦСТ R1000 работает на частоте 1ГГц и содержит 4 ядра 64-разрядной архитектуры SPARC V9. 



